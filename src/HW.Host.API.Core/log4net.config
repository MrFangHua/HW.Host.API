<?xml version="1.0" encoding="utf-8"?>
<log4net>
  <!-- Debug 将日志以回滚文件的形式写到文件中 -->
  <appender name="RollingFileDebug" type="log4net.Appender.RollingFileAppender">
    <!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
    <file value="logs/Debug/" />
    <!-- 将日志信息追加到已有的日志文件中-->
    <appendToFile value="true" />
    <!-- 创建新文件的方式(可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite) -->
    <rollingStyle value="Date" />
    <!-- 日志文件的命名规则 -->
    <datePattern value="yyyy-MM-dd/'Debug.txt'" />
    <!-- 备份日志数目，默认为0。在CountDirection为负数时有效。 -->
    <maxSizeRollBackups value="100" />
    <!-- 日志最大文件大小 -->
    <maximumFileSize value="1MB" />
    <!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
    <staticLogFileName value="false" />
    <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="&#13;&#10;&#13;&#10;&#13;&#10;【日志时间】：%date 【线程ID】：%thread 【日志级别】：%-5level &#13;&#10;【日志对象】：%logger &#13;&#10;【日志内容】：%message%newline " />
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="Debug" />
      <param name="LevelMax" value="Debug" />
    </filter>
  </appender>

  <!-- Info 将日志以回滚文件的形式写到文件中 -->
  <appender name="RollingFileInfo" type="log4net.Appender.RollingFileAppender">
    <!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
    <file value="logs/Info/" />
    <!-- 将日志信息追加到已有的日志文件中-->
    <appendToFile value="true" />
    <!-- 创建新文件的方式(可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite) -->
    <rollingStyle value="Date" />
    <!-- 日志文件的命名规则 -->
    <datePattern value="yyyy-MM-dd/'Info.txt'" />
    <!-- 备份日志数目，默认为0。在CountDirection为负数时有效。 -->
    <maxSizeRollBackups value="100" />
    <!-- 日志最大文件大小 -->
    <maximumFileSize value="1MB" />
    <!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
    <staticLogFileName value="false" />
    <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="&#13;&#10;&#13;&#10;&#13;&#10;【日志时间】：%date 【线程ID】：%thread 【日志级别】：%-5level &#13;&#10;【日志对象】：%logger &#13;&#10;【日志内容】：%message%newline " />
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="Info" />
      <param name="LevelMax" value="Info" />
    </filter>
  </appender>

  <!-- Warn 将日志以回滚文件的形式写到文件中 -->
  <appender name="RollingFileWarn" type="log4net.Appender.RollingFileAppender">
    <!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
    <file value="logs/Warn/" />
    <!-- 将日志信息追加到已有的日志文件中-->
    <appendToFile value="true" />
    <!-- 创建新文件的方式(可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite) -->
    <rollingStyle value="Date" />
    <!-- 日志文件的命名规则 -->
    <datePattern value="yyyy-MM-dd/'Warn.txt'" />
    <!-- 备份日志数目，默认为0。在CountDirection为负数时有效。 -->
    <maxSizeRollBackups value="100" />
    <!-- 日志最大文件大小 -->
    <maximumFileSize value="1MB" />
    <!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
    <staticLogFileName value="false" />
    <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="&#13;&#10;&#13;&#10;&#13;&#10;【日志时间】：%date 【线程ID】：%thread 【日志级别】：%-5level &#13;&#10;【日志对象】：%logger &#13;&#10;【日志内容】：%message%newline " />
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="Warn" />
      <param name="LevelMax" value="Warn" />
    </filter>
  </appender>

  <!-- Error 将日志以回滚文件的形式写到文件中 -->
  <appender name="RollingFileError" type="log4net.Appender.RollingFileAppender">
    <!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
    <file value="logs/Error/" />
    <!-- 将日志信息追加到已有的日志文件中-->
    <appendToFile value="true" />
    <!-- 创建新文件的方式(可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite) -->
    <rollingStyle value="Date" />
    <!-- 日志文件的命名规则 -->
    <datePattern value="yyyy-MM-dd/'Error.txt'" />
    <!-- 备份日志数目，默认为0。在CountDirection为负数时有效。 -->
    <maxSizeRollBackups value="100" />
    <!-- 日志最大文件大小 -->
    <maximumFileSize value="1MB" />
    <!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
    <staticLogFileName value="false" />
    <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="&#13;&#10;&#13;&#10;&#13;&#10;【日志时间】：%date 【线程ID】：%thread 【日志级别】：%-5level &#13;&#10;【日志对象】：%logger &#13;&#10;【日志内容】：%message%newline " />
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="Error" />
      <param name="LevelMax" value="Error" />
    </filter>
  </appender>

  <!-- Fatal 将日志以回滚文件的形式写到文件中 -->
  <appender name="RollingFileFatal" type="log4net.Appender.RollingFileAppender">
    <!-- 日志文件存放位置，可以为绝对路径也可以为相对路径 -->
    <file value="logs/Fatal/" />
    <!-- 将日志信息追加到已有的日志文件中-->
    <appendToFile value="true" />
    <!-- 创建新文件的方式(可选为Size（按文件大小），Date（按日期），Once（每启动一次创建一个文件），Composite（按日期及文件大小），默认为Composite) -->
    <rollingStyle value="Date" />
    <!-- 日志文件的命名规则 -->
    <datePattern value="yyyy-MM-dd/'Fatal.txt'" />
    <!-- 备份日志数目，默认为0。在CountDirection为负数时有效。 -->
    <maxSizeRollBackups value="100" />
    <!-- 日志最大文件大小 -->
    <maximumFileSize value="1MB" />
    <!-- 当将日期作为日志文件的名字时，必须将staticLogFileName的值设置为false -->
    <staticLogFileName value="false" />
    <!-- 最小锁定模式，以允许多个进程可以写入同一个文件 -->
    <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
    <layout type="log4net.Layout.PatternLayout">
      <conversionPattern value="&#13;&#10;&#13;&#10;&#13;&#10;【日志时间】：%date 【线程ID】：%thread 【日志级别】：%-5level &#13;&#10;【日志对象】：%logger &#13;&#10;【日志内容】：%message%newline " />
    </layout>
    <filter type="log4net.Filter.LevelRangeFilter">
      <param name="LevelMin" value="Fatal" />
      <param name="LevelMax" value="Fatal" />
    </filter>
  </appender>
  <root>
    <!-- 控制级别，由低到高：ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF
    比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录
    如果没有定义LEVEL的值，则缺省为DEBUG -->
    <appender-ref ref="RollingFileDebug" />
    <appender-ref ref="RollingFileInfo" />
    <appender-ref ref="RollingFileWarn" />
    <appender-ref ref="RollingFileError" />
    <appender-ref ref="RollingFileFatal" />
    <level value="ALL" />
    <appender-ref ref="FileAppender" />
  </root>
</log4net>