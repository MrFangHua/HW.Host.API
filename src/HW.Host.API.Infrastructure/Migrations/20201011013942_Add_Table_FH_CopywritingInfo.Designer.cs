// <auto-generated />
using System;
using HW.Host.API.Infrastructure.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HW.Host.API.Infrastructure.Migrations
{
    [DbContext(typeof(HWHostDbContext))]
    [Migration("20201011013942_Add_Table_FH_CopywritingInfo")]
    partial class Add_Table_FH_CopywritingInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HW.Host.API.Model.DefaultEntity.FH_Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminName")
                        .IsRequired();

                    b.Property<string>("AdminPwd")
                        .IsRequired();

                    b.Property<int>("CreateAdminID");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("CreateUserID");

                    b.Property<string>("DeleteTimeAndRemark");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("LastUpdateTime");

                    b.HasKey("Id");

                    b.ToTable("FH_Admin");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdminName = "Admin",
                            AdminPwd = "Admin123456",
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 953, DateTimeKind.Local).AddTicks(6516),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 955, DateTimeKind.Local).AddTicks(6814)
                        },
                        new
                        {
                            Id = 2,
                            AdminName = "Mr.Fang",
                            AdminPwd = "Fh2269...",
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 955, DateTimeKind.Local).AddTicks(8705),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 955, DateTimeKind.Local).AddTicks(8708)
                        });
                });

            modelBuilder.Entity("HW.Host.API.Model.DefaultEntity.FH_Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateAdminID");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("CreateUserID");

                    b.Property<string>("DeleteTimeAndRemark");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("LastUpdateTime");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.Property<string>("UserPwd")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("FH_Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(5278),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(5282),
                            UserName = "Admin",
                            UserPwd = "Admin123456"
                        },
                        new
                        {
                            Id = 2,
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(6618),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(6621),
                            UserName = "Mr.Fang",
                            UserPwd = "Fh2269..."
                        });
                });

            modelBuilder.Entity("HW.Host.API.Model.ModelEntity.FH_CopywritingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("CreateAdminID");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("CreateUserID");

                    b.Property<string>("DeleteTimeAndRemark");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("LastUpdateTime");

                    b.HasKey("Id");

                    b.ToTable("FH_CopywritingInfo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "当你的能力还撑不起你的野心的时，你就需要静下心来 好好学习。",
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9902),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9903)
                        },
                        new
                        {
                            Id = 2,
                            Content = "脏的人多了，干净反倒成了一种错。",
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(492),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(494)
                        },
                        new
                        {
                            Id = 3,
                            Content = "你羡慕的生活都是你没熬过的苦。",
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(502),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(503)
                        },
                        new
                        {
                            Id = 4,
                            Content = "所谓天才，只不过是把别人喝咖啡的功夫都用在了工作上了。",
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(504),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(504)
                        },
                        new
                        {
                            Id = 5,
                            Content = "生活便是寻求新的知识。——门捷列夫",
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(505),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(509)
                        },
                        new
                        {
                            Id = 6,
                            Content = "如果你浪费了自己的年龄，那是挺可悲的。因为你的青春只能持续一点儿时间——很短的一点儿时间。",
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(510),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(511)
                        },
                        new
                        {
                            Id = 7,
                            Content = "世界上一成不变的东西，只有“任何事物都是在不断变化的”这条真理。",
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(514),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 957, DateTimeKind.Local).AddTicks(514)
                        });
                });

            modelBuilder.Entity("HW.Host.API.Model.ModelEntity.FH_GuidePagesMenuInfo", b =>
                {
                    b.Property<int>("MenuID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreateAdminID");

                    b.Property<DateTime>("CreateTime");

                    b.Property<int>("CreateUserID");

                    b.Property<string>("DeleteTimeAndRemark");

                    b.Property<int>("IsDeleted");

                    b.Property<DateTime>("LastUpdateTime");

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<int>("MenuOrder");

                    b.Property<string>("MenuUrl")
                        .IsRequired();

                    b.Property<int>("ParentId");

                    b.HasKey("MenuID");

                    b.ToTable("FH_GuidePagesMenuInfo");

                    b.HasData(
                        new
                        {
                            MenuID = 1,
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(7842),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(7845),
                            MenuName = "首页",
                            MenuOrder = 1,
                            MenuUrl = "https://home.fanghua.host",
                            ParentId = 0
                        },
                        new
                        {
                            MenuID = 2,
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9095),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9097),
                            MenuName = "QQ",
                            MenuOrder = 2,
                            MenuUrl = "https://wpa.qq.com/msgrd?v=3&uin=2875616188&site=qq&menu=yes",
                            ParentId = 0
                        },
                        new
                        {
                            MenuID = 3,
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9117),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9117),
                            MenuName = "微信",
                            MenuOrder = 3,
                            MenuUrl = "https://fanghua.host/assets/images/weixin.jpg",
                            ParentId = 0
                        },
                        new
                        {
                            MenuID = 4,
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9120),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9121),
                            MenuName = "Mr.Fang♥Mrs.Zhou",
                            MenuOrder = 4,
                            MenuUrl = "https://fh.fanghua.host",
                            ParentId = 0
                        },
                        new
                        {
                            MenuID = 5,
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9122),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9123),
                            MenuName = "表白小工具",
                            MenuOrder = 5,
                            MenuUrl = "https://devlove.fanghua.host",
                            ParentId = 0
                        },
                        new
                        {
                            MenuID = 6,
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9124),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9126),
                            MenuName = "实用小工具",
                            MenuOrder = 6,
                            MenuUrl = "https://tool.fanghua.host",
                            ParentId = 0
                        },
                        new
                        {
                            MenuID = 7,
                            CreateAdminID = 0,
                            CreateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9127),
                            CreateUserID = 0,
                            IsDeleted = 0,
                            LastUpdateTime = new DateTime(2020, 10, 11, 9, 39, 41, 956, DateTimeKind.Local).AddTicks(9127),
                            MenuName = "休闲小游戏",
                            MenuOrder = 7,
                            MenuUrl = "https://game.fanghua.host",
                            ParentId = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
